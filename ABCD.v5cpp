{"mode":"Text","hardwareTarget":"brain","textContent":"#pragma region VEXcode Generated Robot Configuration\n// Make sure all required headers are included.\n#include <stdio.h>\n#include <stdlib.h>\n#include <stdbool.h>\n#include <math.h>\n#include <string.h>\n\n\n#include \"vex.h\"\n\nusing namespace vex;\n\n// Brain should be defined by default\nbrain Brain;\n\n\n// START V5 MACROS\n#define waitUntil(condition)                                                   \\\n  do {                                                                         \\\n    wait(5, msec);                                                             \\\n  } while (!(condition))\n\n#define repeat(iterations)                                                     \\\n  for (int iterator = 0; iterator < iterations; iterator++)\n// END V5 MACROS\n\n\n// Robot configuration code.\ncontroller Controller1 = controller(primary);\nmotor Motor8 = motor(PORT8, ratio18_1, false);\n\n\n\n// generating and setting random seed\nvoid initializeRandomSeed(){\n  int systemTime = Brain.Timer.systemHighResolution();\n  double batteryCurrent = Brain.Battery.current();\n  double batteryVoltage = Brain.Battery.voltage(voltageUnits::mV);\n\n  // Combine these values into a single integer\n  int seed = int(batteryVoltage + batteryCurrent * 100) + systemTime;\n\n  // Set the seed\n  srand(seed);\n}\n\n\n\nvoid vexcodeInit() {\n\n  //Initializing random seed.\n  initializeRandomSeed(); \n}\n\n\n// Helper to make playing sounds from the V5 in VEXcode easier and\n// keeps the code cleaner by making it clear what is happening.\nvoid playVexcodeSound(const char *soundName) {\n  printf(\"VEXPlaySound:%s\\n\", soundName);\n  wait(5, msec);\n}\n\n\n\n// define variable for remote controller enable/disable\nbool RemoteControlCodeEnabled = true;\n\n#pragma endregion VEXcode Generated Robot Configuration\n \n/*----------------------------------------------------------------------------*/\n/* */\n/* Module: main.cpp */\n/* Author: {author} */\n/* Created: {date} */\n/* Description: V5 project */\n/* */\n/*----------------------------------------------------------------------------*/\n \n// Include the V5 Library\n#include \"vex.h\"\n \n// Allows for easier use of the VEX Library\nusing namespace vex;\n void userControl(void) {\n  Brain.Screen.clearScreen();\n  // place driver control in this while loop\n  Drivetrain.drive(forward);\n  while (true) {\n  LeftDriveSmart.setVelocity(Controller1.Axis3.position()*1, percent);\n  RightDriveSmart.setVelocity(Controller1.Axis2.position()*1, percent);\n\n \n\n   \n   \n  }\n\n}\n/*************************************************************************************************************************\nIf you are using button pressed function, you have to separate it out in another function() and call it from button prssed\nyou can setup a bunch of functions to control what each button will do when pressed\n**************************************************************************************************************************/\n \nvoid buttonL1Pressed(){\n     Motor8.spinFor(forward, 90, degrees, false);\n  }\n\nvoid buttonL2Pressed(){\n     Motor8.stop();\n  }\n\nint main() {\n  // Initializing Robot Configuration. DO NOT REMOVE!\n  vexcodeInit();\n  // Begin project code\n \n  // Register event with a callback function.\n    Controller1.ButtonL1.pressed(buttonL1Pressed);\n    Controller1.ButtonL2.pressed(buttonL2Pressed);\n \n/*************************************************************************************************************************\nif it's pressing() then you can just call it and tell it what to do\n**************************************************************************************************************************/\n  while (true) {\n  if (Controller1.ButtonL1.pressing()) {\n    Motor8.spinFor(forward, 90, degrees, false);\n  }\n\n  if (Controller1.ButtonL2.pressing()) {\n    Motor8.stop();\n  }\n\n \n}\n}","textLanguage":"cpp","robotConfig":[{"port":[11,1,6,18,null],"name":"Drivetrain","customName":false,"deviceType":"Drivetrain","deviceClass":"smartdrive","setting":{"type":"4-motor","wheelSize":"wheel4in","gear":"ratio36_1","gearRatio":"1:1","direction":"fwd","gyroType":"none","width":"295","unit":"mm","wheelbase":"40","wheelbaseUnit":"mm","xOffset":"0","xOffsetUnit":"mm","yOffset":"0","yOffsetUnit":"mm","thetaOffset":"180"}},{"port":[8],"name":"Motor8","customName":false,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio18_1"}},{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"Motor8","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"split","id":"primary"}}],"slot":0,"platform":"V5","sdkVersion":"20240802.15.00.00","appVersion":"4.0.5","fileFormat":"2.0.0","targetBrainGen":"First","v5Sounds":[{"name":"game over","url":"static/sounds/mixkit-arcade-retro-game-over-213.wav"}],"v5SoundsEnabled":false}